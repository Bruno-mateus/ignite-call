// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}


model User {
  id         String  @id @default(uuid())
  name       String
  username   String  @unique
  email      String? @unique
  bio        String? @db.Text
  avatar_url String?

  accounts         Account[]
  sessions         Session[]
  UserTimeInterval UserTimeInterval[]

  createdAt  DateTime     @default(now())
  Scheduling Scheduling[]         

  @@map("users")
}

model Account {
  id                 String  @id @default(uuid())
  user_id            String 
  type               String
  provider           String
  provider_accountId String  
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String? @db.Text
  scope              String?
  id_token           String? @db.Text 
  session_state      String?

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_accountId])
  @@map("accounts")
  @@index([user_id])
}

model Session {
  id            String   @id @default(uuid()) @map("_id") 
  session_token String   @unique 
  user_id       String   
  expires       DateTime
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("sessions")
  @@index([user_id])
}

model UserTimeInterval {
  id                    String @id @default(uuid()) @map("_id") 
  week_day              Int
  time_start_in_minutes Int
  time_end_in_minutes   Int
  user                  User   @relation(fields: [user_id], references: [id])
  user_id               String 

  @@map("user_time_intervals")
  @@index([user_id])
}

model Scheduling {
  id           String   @id @default(uuid()) @map("_id") 
  date         DateTime
  name         String
  email        String
  observations String?  @db.Text
  created_at   DateTime @default(now())

  user         User   @relation(fields: [user_id], references: [id])
  user_id      String 

  @@map("schedulings")
  @@index([user_id])
}
